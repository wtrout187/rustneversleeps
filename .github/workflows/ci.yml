name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: 🧪 Test Suite
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: 🦀 Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: 📦 Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: 🔍 Check formatting
      run: cargo fmt --all -- --check
    
    - name: 🕵️ Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: 🏗️ Build
      run: cargo build --verbose
    
    - name: 🧪 Run tests
      run: cargo test --verbose

  build:
    name: 🏗️ Build Release
    needs: test
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: 🦀 Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: 📦 Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: 🚀 Build release
      run: cargo build --release --verbose
    
    - name: 📤 Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ollama-rust-ui-macos
        path: target/release/ollama-ui

  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: 🦀 Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: 🛡️ Security audit
      run: |
        cargo install cargo-audit
        cargo audit

  performance:
    name: ⚡ Performance Check
    needs: build
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: 🦀 Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: 📦 Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: ⚡ Build with optimization
      run: cargo build --release
    
    - name: 📊 Check binary size
      run: |
        ls -lh target/release/ollama-ui
        echo "Binary size: $(du -h target/release/ollama-ui | cut -f1)"
